// _layout.scss

// Layout Mixins
@mixin flex($direction: row, $justify: flex-start, $align: stretch) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $align;
}

@mixin container($max-width: 736px) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 1.5rem;
}

// Main Layout
.main {
  @include container;
  min-height: 100vh;
}

// Header Layout
.header {
  @include container;
  padding-bottom: 2rem;
}

.nav {
  @include flex(row, space-between, center);
  position: relative;
  width: 100%;
  padding-inline: 1.5rem;

  &__logo {
    @include flex(row, flex-start, center);
  }

  &__controls {
    @include flex(row, flex-end, center);
    gap: 1rem;
  }

  &__divider {
    width: 1px;
    height: 2rem;
    background-color: map-get(map-get($colors, light), secondary);
  }
}

// Search Section
.search {
  margin-bottom: 2.5rem;

  &__container {
    position: relative;
    width: 100%;
  }

  &__input {
    width: 100%;
    padding: 1rem 3rem 1rem 1.5rem;
    border-radius: 1rem;
    background-color: map-get(map-get($colors, light), search);
    border: 1px solid transparent;

    &:focus {
      border-color: map-get(map-get($colors, light), accent);
      outline: none;
    }

    &--error {
      border-color: map-get(map-get($colors, light), warning);
    }
  }

  &__button {
    position: absolute;
    right: 1.5rem;
    top: 50%;
    transform: translateY(-50%);
    background: none;
    border: none;
    cursor: pointer;
  }
}

// Word Content
.word {
  &__header {
    @include flex(row, space-between, center);
    margin-bottom: 2rem;
  }

  &__info {
    @include flex(column, center, flex-start);
    gap: 0.5rem;
  }

  &__audio-button {
    width: 48px;
    height: 48px;
    position: relative;
    cursor: pointer;
    border: none;
    background: none;
    padding: 0;

    @include respond-to(md) {
      width: 75px;
      height: 75px;
    }
  }
}

// Meanings Section
.meaning {
  margin-bottom: 2rem;

  &:last-child {
    margin-bottom: 0;
  }

  &__part-speech {
    @include flex(row, flex-start, center);
    gap: 1rem;
    margin-bottom: 2rem;
  }

  &__divider {
    flex: 1;
    height: 1px;
    background-color: map-get(map-get($colors, light), secondary);
  }
}

// Results Section
.results {
  &__meaning {
    margin-bottom: 2rem;
  }

  &__definition-list {
    list-style: none;
    padding-left: 1.5rem;
  }

  &__definition-list-item {
    position: relative;
    margin-bottom: 0.75rem;

    &::before {
      content: "â€¢";
      position: absolute;
      left: -1rem;
      color: map-get(map-get($colors, light), accent);
    }
  }

  &__synonyms {
    @include flex(row, flex-start, center);
    gap: 1.5rem;
    margin-top: 1.5rem;
  }

  &__source {
    margin-top: 2rem;
    padding-top: 1.5rem;
    border-top: 1px solid map-get(map-get($colors, light), secondary);
  }
}

// Not Found State
.not-found {
  text-align: center;
  padding: 4rem 1.5rem;

  &--hidden {
    display: none;
  }

  &__emoji {
    font-size: 4rem;
    margin-bottom: 2rem;
    display: block;
  }
}

// Responsive Layouts
@include respond-to(md) {
  .main {
    padding-top: 4rem;
  }

  .search {
    margin-bottom: 3.5rem;
  }

  .meaning {
    margin-bottom: 2.5rem;
  }
}

@include respond-to(lg) {
    body {
        max-width: 737px;
        margin: 0 auto;
    }
  .main {
    padding-top: 5rem;
  }
}